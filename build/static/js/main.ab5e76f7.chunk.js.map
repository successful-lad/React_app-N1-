{"version":3,"sources":["Component/App-header/index.js","Component/App-header/App-header.js","Component/Search-panel/index.js","Component/Search-panel/Search-panel.js","Component/TodoItem/index.js","Component/TodoItem/TodoItem.js","Component/Todo-list/index.js","Component/Todo-list/Todo-list.js","Component/AddInp/index.js","Component/AddInp/AddInp.js","Component/App/App.js","serviceWorker.js","index.js"],"names":["AppHeader","todos","this","props","count","ToDo","map","_ref","done","length","react_default","a","createElement","className","Component","SearchPanel","buttons","label","name","state","term","onSearchChange","e","target","value","_this","setState","_this$props","filter","onFilterChange","clazz","type","concat","key","onClick","placeholder","onChange","TodoItem","onDeleted","onImportant","OnDone","items","important","style","TodoList","list","id","Object","objectWithoutProperties","Component_TodoItem","AddInp","OnLabelChange","onSubmit","preventDefault","AddItem","App","maxId","todoDate","idx","findIndex","currentvalue","toConsumableArray","slice","oldItem","newItem","objectSpread","_ref2","text","_ref3","item","toLowerCase","indexOf","_this$state","visibleItems","search","App_header","Search_panel","Todo_list","Component_AddInp","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAEeA,0LCCN,IACEC,EAASC,KAAKC,MAAdF,MACHG,EAAQ,EACTC,EAAO,EAWV,OAVAJ,EAAMK,IAAI,SAAAC,GAIN,OAJgBA,EAARC,MAEJJ,IAGAC,EAAOJ,EAAMQ,OAASL,IAM1BM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,cAAMP,EAAN,eAAwBD,EAAxB,iBAlB2BU,cCAxBC,6MCCXC,QAAU,CACN,CAACC,MAAQ,MAAOC,KAAO,OACvB,CAACD,MAAQ,SAAUC,KAAO,UAC1B,CAACD,MAAQ,OAAQC,KAAO,WAEhCC,MAAQ,CACJC,KAAO,MAEXC,eAAgB,SAACC,GACjB,IAAMF,EAAOE,EAAEC,OAAOC,MACtBC,EAAKC,SAAS,CAACN,SACfK,EAAKtB,MAAMkB,eAAeD,4EAGb,IAAAO,EAC4BzB,KAAKC,MAA/ByB,EADFD,EACEC,OAAQC,EADVF,EACUE,eACXb,EAAUd,KAAKc,QAAQV,IAAI,SAAAC,GAAkB,IAAhBU,EAAgBV,EAAhBU,MAAQC,EAAQX,EAARW,KAErCY,EADWF,IAAWV,EACH,WAAa,wBAEpC,OACIR,EAAAC,EAAAC,cAAA,UAAQmB,KAAK,SACblB,UAAS,QAAAmB,OAAUF,GACnBG,IAAOf,EACPgB,QAAU,kBAAIL,EAAeX,KAC3BD,KAGN,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACAuB,YAAY,YACZtB,UAAU,eACVW,MAAOtB,KAAKiB,MAAMC,KAClBgB,SAAYlC,KAAKmB,kBAGrBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVG,WAxCoBF,qBCA1BuB,0LCEF,IAAAV,EAC4CzB,KAAKC,MAA9CmC,EADHX,EACGW,UAAWC,EADdZ,EACcY,YAAaC,EAD3Bb,EAC2Ba,OAAQC,EADnCd,EACmCc,MACjCC,EAA2BD,EAA3BC,UAAWzB,EAAgBwB,EAAhBxB,MACd0B,EAAQ,iBAOZ,OARkCF,EAATjC,OAGrBmC,GAAQ,SAETD,IACCC,GAAQ,cAGRjC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAa8B,EACnBT,QAAUM,GACLvB,GAELP,EAAAC,EAAAC,cAAA,YAGIF,EAAAC,EAAAC,cAAA,UACAC,UAAU,4BACVqB,QAASI,GAFT,KAGG5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEhBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAClBqB,QAASK,GAEL7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCA7BCC,cCAvB8B,0LCKH,IAAAjB,EACuCzB,KAAKC,MAA7CF,EADC0B,EACD1B,MAAOqC,EADNX,EACMW,UAAUC,EADhBZ,EACgBY,YAAaC,EAD7Bb,EAC6Ba,OAC/BK,EAAO5C,EAAMK,IAAI,SAAAC,GAAkB,IAAhBuC,EAAgBvC,EAAhBuC,GAAOL,EAASM,OAAAC,EAAA,EAAAD,CAAAxC,EAAA,QAEzC,OACEG,EAAAC,EAAAC,cAAA,MAAIqB,IAAKa,EACTjC,UAAW,mBACTH,EAAAC,EAAAC,cAACqC,EAAD,CACEX,UAAY,kBAAIA,EAAUQ,IAC1BL,MAASA,EACVF,YAAa,kBAAIA,EAAYO,IAC7BN,OAAQ,kBAAIA,EAAOM,SAKpB,OACIpC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACfgC,WArBwB/B,cCHxBoC,6MCEX/B,MAAQ,CACJF,MAAQ,MAEZkC,cAAc,SAAC7B,GACnBG,EAAKC,SAAS,CACVT,MAAQK,EAAEC,OAAOC,WAGjB4B,SAAS,SAAC9B,GACVA,EAAE+B,iBACF5B,EAAKtB,MAAMmD,QAAQ7B,EAAKN,MAAMF,OAC9BQ,EAAKC,SAAS,CACVT,MAAQ,8EAMR,OAEIP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBuC,SAAYlD,KAAKkD,UACb1C,EAAAC,EAAAC,cAAA,SACAC,UAAU,eACVsB,YAAY,gBACZC,SAAYlC,KAAKiD,cACjB3B,MAAStB,KAAKiB,MAAMF,QAGpBP,EAAAC,EAAAC,cAAA,UACAC,UAAU,8BADV,yBA9BoBC,aCKfyC,oNACjBC,MAAQ,IACVrC,MAAO,CACLC,KAAO,GACPQ,OAAS,MACT6B,SAAS,CACP,CAACxC,MAAM,eAAgB6B,GAAI,EAAGJ,WAAW,EAAOlC,MAAM,GACtD,CAACS,MAAM,mBAAoB6B,GAAI,EAAGJ,WAAW,EAAOlC,MAAM,GAC1D,CAACS,MAAM,eAAgB6B,GAAI,EAAGJ,WAAW,EAAOlC,MAAM,OAG5D8B,UAAW,SAACQ,GACZrB,EAAKC,SAAS,SAACP,GACb,IAAMuC,EAAMvC,EAAMsC,SAASE,UAAU,SAACC,GAAD,OAAiBA,EAAad,KAAOA,IAE1E,MAAO,CACLW,SAFU,GAAAzB,OAAAe,OAAAc,EAAA,EAAAd,CAAM5B,EAAMsC,SAASK,MAAM,EAAGJ,IAA9BX,OAAAc,EAAA,EAAAd,CAAuC5B,EAAMsC,SAASK,MAAMJ,EAAK,WAM/EnB,YAAY,SAACO,GACXrB,EAAKC,SAAS,SAAAnB,GAAc,IAAZkD,EAAYlD,EAAZkD,SACRC,EAAMD,EAASE,UAAU,SAACC,GAAD,OAAiBA,EAAad,KAAOA,IAC9DiB,EAAUN,EAASC,GACnBM,EAAOjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAOgB,EAAP,CACXrB,WAAYqB,EAAQrB,YAItB,MAAO,CACLe,SAJU,GAAAzB,OAAAe,OAAAc,EAAA,EAAAd,CAAOU,EAASK,MAAM,EAAGJ,IAAzB,CACTM,GADSjB,OAAAc,EAAA,EAAAd,CAENU,EAASK,MAAMJ,EAAK,WAM9BlB,OAAS,SAACM,GACRrB,EAAKC,SAAS,SAAAwC,GAAc,IAAZT,EAAYS,EAAZT,SACRC,EAAMD,EAASE,UAAU,SAACC,GAAD,OAAiBA,EAAad,KAAOA,IAC9DiB,EAAUN,EAASC,GACnBM,EAAOjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAOgB,EAAP,CACXvD,MAAMuD,EAAQvD,OAIhB,MAAO,CACLiD,SAJU,GAAAzB,OAAAe,OAAAc,EAAA,EAAAd,CAAOU,EAASK,MAAM,EAAGJ,IAAzB,CACTM,GADSjB,OAAAc,EAAA,EAAAd,CAENU,EAASK,MAAMJ,EAAK,WAM9BJ,QAAQ,SAACa,GACT,IAAMH,EAAU,CACd/C,MAAOkD,EACNrB,GAAIrB,EAAK+B,QACRd,WAAW,EACVlC,MAAM,GAEXiB,EAAKC,SAAS,SAAA0C,GAAc,IAAZX,EAAYW,EAAZX,SAEd,MAAO,CACLA,SAFU,GAAAzB,OAAAe,OAAAc,EAAA,EAAAd,CAAOU,GAAP,CAAiBO,UAc/B3C,eAAiB,SAACD,GAChBK,EAAKC,SAAS,CAACN,YAEjBS,eAAe,SAACD,GACdH,EAAKC,SAAS,CAACE,kFAZVa,EAAOrB,GACZ,OAAoB,IAAjBqB,EAAMhC,OACAgC,EAEFA,EAAMb,OAAO,SAACyC,GACnB,OAAOA,EAAKpD,MAAMqD,cAAcC,QAAQnD,EAAKkD,gBAAkB,mCAS5D7B,EAAOb,GACZ,OAAOA,GACL,IAAK,MACL,OAAOa,EACP,IAAK,SACH,OAAOA,EAAMb,OAAO,SAACyC,GAAD,OACjBA,EAAK7D,OACV,IAAK,OACF,OAAOiC,EAAMb,OAAO,SAACyC,GAAD,OAClBA,EAAK7D,OACP,QACA,OAAOiC,oCAKH,IAAA+B,EAC0BtE,KAAKiB,MAA/BC,EADAoD,EACApD,KAAOqC,EADPe,EACOf,SAAU7B,EADjB4C,EACiB5C,OAClB6C,EAAevE,KAAK0B,OAAO1B,KAAKwE,OAAOjB,EAAUrC,GAAOQ,GAE5D,OAEFlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAD,CACA1E,MAAQwE,IAER/D,EAAAC,EAAAC,cAACgE,EAAD,CACAvD,eAAgBnB,KAAKmB,eACrBQ,eAAkB3B,KAAK2B,eACvBD,OAASA,IAETlB,EAAAC,EAAAC,cAACiE,EAAD,CACA5E,MAAQwE,EACRnC,UAAYpC,KAAKoC,UACjBC,YAAcrC,KAAKqC,YACnBC,OAAStC,KAAKsC,SAGb9B,EAAAC,EAAAC,cAACkE,EAAD,CACAxB,QAAWpD,KAAKoD,kBAnHUxC,cCIbiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ab5e76f7.chunk.js","sourcesContent":["import AppHeader from './App-header';\n\nexport default AppHeader;","import React, {Component} from 'react';\nimport './style.css';\nexport default class AppHeader extends Component {\nrender() {\n    const {todos} = this.props;\n    let count = 0;\n   let ToDo = 0;\n    todos.map(({done})=>{\n        if(done) {\n            count++\n        }\n        return(\n            ToDo = todos.length - count\n        )\n     \n    })\n\n    return(\n        <div className='wrapper'>\n            <h1>ToDo List</h1>\n            <h2> {ToDo} more todo, {count} done</h2>\n        </div>\n    )\n}\n}","import SearchPanel from './Search-panel';\n\nexport default SearchPanel;","import React, {Component} from 'react';\n\nexport default class SearchPanel extends Component {\n    buttons = [\n        {label : 'All', name : 'all'}, \n        {label : 'Active', name : 'active'},\n        {label : 'Done', name : 'done'}\n    ]\nstate = {\n    term : \"\"\n};\nonSearchChange =(e)=>{\nconst term = e.target.value;\nthis.setState({term})\nthis.props.onSearchChange(term);\n}\n\n    render() {\n        const {filter, onFilterChange} = this.props;\n      const buttons = this.buttons.map(({label,  name})=>{\n      const isActive = filter === name;\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\"\n      \n        return (\n            <button type='button' \n            className={` btn ${clazz}`}\n            key = {name}\n            onClick= {()=>onFilterChange(name)} \n            >{label}</button>\n        )\n      })\n        return(\n            <div className=\"wrapper\">\n                <div>\n                    <input \n                    placeholder=\"Something\"\n                    className='form-control'\n                    value={this.state.term}\n                    onChange = {this.onSearchChange} > \n                        </input>\n                </div>\n                <div className='btn-group'>\n                    {buttons}\n                </div>\n            </div>\n        )\n    }\n}","import TodoItem from './TodoItem';\n\nexport default TodoItem;","import React, {Component} from 'react';\nimport './style.css'\nexport default class TodoItem extends Component {\n\n    render() {\n        const { onDeleted, onImportant, OnDone, items} = this.props;\n        const {important, label, done } = items;\n        let style = 'todo-list-item';\n        if(done) {\n            style +=' done';\n        }\n        if(important) {\n            style +=' important';\n        }\n        return  (\n            <span className='flux'>\n                <span className = {style}\n                onClick= {OnDone}>\n                    {label}\n                </span>\n                <span>\n\n\n                    <button \n                    className='btn btn-outline-secondary'\n                    onClick={onDeleted }\n                    >  <i className=\"fa fa-trash-o\" />\n                    </button>\n                    <button className='btn btn-outline-secondary'\n                    onClick={onImportant}\n                    >\n                        <i className=\"fa fa-exclamation\" /></button>\n                </span>\n            </span>\n        )\n    }\n}","import TodoList from './Todo-list';\n\nexport default TodoList;","import React, {Component} from 'react';\nimport TodoItem from '../TodoItem';\nimport './style.css';\n\n\nexport default  class TodoList extends Component {\n\n  render () {\n    const {todos, onDeleted,onImportant, OnDone} = this.props;\n    const list = todos.map(({id, ...items})=>{\n\n    return(\n      <li key={id}\n      className= 'list-group-item' >\n        <TodoItem \n          onDeleted= {()=>onDeleted(id)} \n          items = {items}\n         onImportant={()=>onImportant(id)}\n         OnDone={()=>OnDone(id)}\n        ></TodoItem>\n      </li>\n    )\n    })\n        return(\n            <div>\n                <ul className='list-group'>\n              {list}\n                </ul>\n            </div>\n        )\n    }\n  }","import AddInp from './AddInp';\n\nexport default AddInp;","import React, {Component} from 'react';\n\n\nexport default class AddInp extends Component{\n    state = {\n        label : ''\n    }\n    OnLabelChange=(e)=>{\nthis.setState({\n    label : e.target.value\n})\n    }\n    onSubmit=(e)=>{\n    e.preventDefault();\n    this.props.AddItem(this.state.label)\n    this.setState({\n        label : \"\"\n    })\n    }\n    render(){\n\n\n        return(\n        \n            <form className='d-flex'\n            onSubmit = {this.onSubmit}>\n                <input \n                className='form-control'\n                placeholder='Add something'\n                onChange = {this.OnLabelChange}\n                value = {this.state.label}\n                ></input>\n\n                <button \n                className=' btn btn-outline-secondary'\n    \n                > Add New Task</button>\n            </form>\n        )\n    }\n}","import React, {Component} from 'react';\nimport AppHeader from '../App-header'\nimport SearchPanel from '../Search-panel'\nimport TodoList from '../Todo-list';\nimport AddInp from '../AddInp';\nimport './style.css';\n\n\nexport default class App extends Component{\n    maxId = 3;\n  state ={\n    term : '', \n    filter : 'all',\n    todoDate:[\n      {label:\"Drink Coffee\", id: 0, important: false, done: false  },\n      {label:\"Make Awesome App\", id: 1, important: false, done: false},\n      {label:\"Have a Lunch\", id: 2, important: false, done: false} \n    ]\n  }\nonDeleted =(id)=>{\nthis.setState((state)=>{\n  const idx = state.todoDate.findIndex((currentvalue)=> currentvalue.id === id);\n  const NewArr =[...state.todoDate.slice(0, idx), ...state.todoDate.slice(idx +1)];\n  return {\n    todoDate: NewArr\n   }\n})\n}\nonImportant=(id)=>{\n  this.setState(({todoDate})=>{\n    const idx = todoDate.findIndex((currentvalue)=> currentvalue.id === id);\n    const oldItem = todoDate[idx];\n    const newItem = {...oldItem,\n      important: !oldItem.important };\n    const newArr = [...todoDate.slice(0, idx),\n       newItem,\n       ...todoDate.slice(idx +1) ]\n    return {\n      todoDate: newArr\n    }\n})\n}\nOnDone = (id)=>{\n  this.setState(({todoDate})=>{\n    const idx = todoDate.findIndex((currentvalue)=> currentvalue.id === id);\n    const oldItem = todoDate[idx];\n    const newItem = {...oldItem,\n      done:!oldItem.done };\n    const newArr = [...todoDate.slice(0, idx),\n       newItem,\n       ...todoDate.slice(idx +1) ]\n    return {\n      todoDate: newArr\n    }\n})\n}\nAddItem=(text)=>{\nconst newItem = {\n  label: text,\n   id: this.maxId++,\n    important: false,\n     done: false  \n}\nthis.setState(({todoDate})=>{\n  const newArr = [...todoDate, newItem];\n  return {\n    todoDate : newArr\n  }\n})\n}\nsearch(items, term) {\n  if(items.length === 0) {\n    return items;\n  }\n  return items.filter((item)=>{\n    return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n  });\n}\nonSearchChange = (term)=>{\n  this.setState({term})\n}\nonFilterChange=(filter)=>{\n  this.setState({filter})\n}\nfilter(items, filter) {\n  switch(filter) {\n    case \"all\" : \n    return items;\n    case \"active\" :\n      return items.filter((item)=>\n        !item.done);\n    case 'done' :\n       return items.filter((item)=>\n         item.done);\n       default :\n       return items;\n  }\n}\n\n\n  render() {\n    const {term , todoDate, filter} =this.state;\n    const visibleItems = this.filter(this.search(todoDate, term), filter);\n\n      return (\n \n    <div>\n      <AppHeader\n      todos ={visibleItems}\n      ></AppHeader>\n      <SearchPanel\n      onSearchChange={this.onSearchChange}\n      onFilterChange = {this.onFilterChange}\n      filter ={filter}\n      ></SearchPanel >\n      <TodoList \n      todos ={visibleItems}\n      onDeleted= {this.onDeleted}\n      onImportant= {this.onImportant}\n      OnDone= {this.OnDone}\n      ></TodoList>\n\n       <AddInp\n       AddItem = {this.AddItem}></AddInp> \n    </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Component/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}